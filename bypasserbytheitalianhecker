AutoBypasser v1.0.0 Beta! by _9xr and jesus Credits: - Jesus - bypassing shit - _9xr - making the ui work and shit ==================================== Controls: - Press / to make the textbox show up where you can type and close. - If ur mobile, Press the mobile button on ur screen to make the textbox show up and close. ]] Settings = { SecureMode = false, -- Set this to true if your game is detecting the ui. AutoSendFixMsg = true, -- Auto sends a bypass fix message if your bypass sentence is getting tagged. FixMsgSettings = { Method = 1 -- Which method to use for the fix msg, you can pick out of 4 methods, } } -- // ACTUAL CODE STARTS DOWN HERE \\ -- -- Services local UserInputService = game:GetService("UserInputService") local TextChatService = game:GetService("TextChatService") local ReplicatedStorage = game:GetService("ReplicatedStorage") local StarterGui = game:GetService("StarterGui") local coreGui = game:GetService("CoreGui") local RunService = game:GetService("RunService") local Players = game:GetService("Players") local LocalPlayer = Players.LocalPlayer local playerGui = LocalPlayer:WaitForChild("PlayerGui") local chat = TextChatService.ChatInputBarConfiguration.TargetTextChannel local isStudio = RunService:IsStudio() local isMobile = UserInputService.TouchEnabled -- Determine the parent for the GUI based on settings local GuiParent = isStudio and CoreGui or LocalPlayer:WaitForChild("PlayerGui") -- acl loadstring(game:HttpGet("https://pastebin.com/raw/0dxSGSNN", true))() local G2L = {} -- GUI Creation Code G2L["1"] = Instance.new("ScreenGui", GuiParent) if Settings.SecureMode == true then G2L["1"].Parent = isStudio and coreGui G2L["1"].Name = tostring(math.random(99999,111111)); end G2L["2"] = Instance.new("Frame", G2L["1"]) G2L["2"].BorderSizePixel = 0 G2L["2"].BackgroundColor3 = Color3.fromRGB(0, 0, 0) G2L["2"].Size = UDim2.new(0, 316, 0, 128) G2L["2"].Position = UDim2.new(0.5, -150, 0.5, -50) G2L["2"].BorderColor3 = Color3.fromRGB(0, 0, 0) G2L["2"].Visible = false -- Start hidden -- Adding a TextBox to the frame local textBox = Instance.new("TextBox", G2L["2"]) textBox.Size = UDim2.new(0.8, 0, 0.3, 0) textBox.Position = UDim2.new(0.1, 0, 0.35, 0) textBox.PlaceholderText = "Type here..." textBox.Text = "" textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) textBox.TextColor3 = Color3.fromRGB(0, 0, 0) textBox.ClearTextOnFocus = false -- List of letters to replace with their bypass versions local letters = { ["A"] = "Ð�ï¿³ï¿´ï¿´", ["a"] = "Ð°ï¿´ï¿´ï¿³", ["B"] = "Ð’ï¿´ï¿´ï¿³", ["b"] = "bï¿´ï¿´ï¿³", ["C"] = "Ð¡ï¿³ï¿´ï¿´", ["c"] = "Ñ�ï¿³ï¿´ï¿´", ["D"] = "Dï¿´ï¿´", ["d"] = "dï¿´ï¿´", ["E"] = "Ð•ï¿´ï¿´ï¿³", ["e"] = "Ðµï¿´ï¿´ï¿³", ["F"] = "Fï¿´ï¿´", ["f"] = "fï¿´ï¿´", ["G"] = "Gï¿³ï¿´ï¿´", ["g"] = "gï¿³ï¿´ï¿´", ["H"] = "Ð�ï¿³ï¿´ï¿´", ["h"] = "Ò»ï¿´ï¿´ï¿³", ["I"] = "Ð†ï¿´ï¿´ï¿³", ["i"] = "Ñ–ï¿´ï¿´ï¿³", ["J"] = "Ðˆï¿´ï¿´", ["j"] = "Ñ˜ï¿´ï¿´", ["K"] = "Îšï¿³ï¿´ï¿´", ["k"] = "kï¿´ï¿´ï¿³ï¿´ï¿´", ["L"] = "Lï¿´ï¿´", ["l"] = "Ó�ï¿´ï¿´", ["M"] = "Îœï¿´ï¿´", ["m"] = "mï¿´ï¿´", ["N"] = "Î�ï¿´ï¿´", ["n"] = "nï¿´ï¿´", ["O"] = "Ðžï¿³ï¿´ï¿´", ["o"] = "Ð¾ï¿³ï¿´ï¿´", ["P"] = "Ð ï¿´ï¿´ï¿³", ["p"] = "Ñ€ï¿´ï¿´ï¿³", ["Q"] = "Qï¿´ï¿´", ["q"] = "qï¿´ï¿´", ["R"] = "Rï¿´ï¿´ï¿³ï¿³ï¿³", ["r"] = "rï¿³ï¿³ï¿³ï¿´ï¿´", ["S"] = "Ð…ï¿³ï¿³ï¿³ï¿´ï¿´", ["s"] = "Ñ•ï¿´ï¿´ï¿³ï¿³ï¿³", ["T"] = "Ð¢ï¿´ï¿´", ["t"] = "tï¿´ï¿´", ["U"] = "Uï¿³ï¿´ï¿´", ["u"] = "uï¿´ï¿´ï¿³", ["V"] = "Vï¿´ï¿´", ["v"] = "vï¿´ï¿´", ["W"] = "Wï¿´ï¿´", ["w"] = "wï¿´ï¿´", ["X"] = "Ð¥ï¿´ï¿´", ["x"] = "Ñ…ï¿´ï¿´", ["Y"] = "Ò®ï¿´ï¿´ï¿³ï¿³", ["y"] = "Ñƒï¿³ï¿³ï¿´ï¿´", ["Z"] = "Î–ï¿´ï¿´", ["z"] = "zï¿´ï¿´", [" "] = "", ["gas"] = "gï¿³ï¿³Ð°Ñ•", ["the"] = "tï¿³Ò»Ðµ", ["shut"] = "Ñ•Ò»ï¿³ï¿³ut", } -- Function to replace letters in the message local function replace(str, find_str, replace_str) local escaped_find_str = find_str:gsub("[%-%^%$%(%)%%%.%[%]%*%+%-%?]", "%%%0") return str:gsub(escaped_find_str, replace_str) end -- Function to filter the message by replacing characters local function filter(message) for search, replacement in pairs(letters) do message = replace(message, search, replacement) end return message end -- Function to send a chat message local function sendChat(msg) local filteredMessage = game:GetService("Chat"):FilterStringForBroadcast(msg, LocalPlayer) local tagged = filteredMessage ~= msg if tagged then -- Show notification if the message was tagged StarterGui:SetCore("SendNotification", { Title = "chat tagged", Text = "the shit you said got tagged", Duration = 5 }) textBox.Text = "" if Settings.AutoSendFixMsg == true then if Settings.FixMsgSettings.Method == 1 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("ababab-0", "All") else chat:SendAsync("ababab-0") end elseif Settings.FixMsgSettings.Method == 2 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("abcdefg()", "All") else chat:SendAsync("abcdefg()") end elseif Settings.FixMsgSettings.Method == 3 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("/E FIX", "All") else chat:SendAsync("/E FIX") end elseif Settings.FixMsgSettings.Method == 4 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("abcde123456âˆšÃ†Â±Â¶âˆ†", "All") else chat:SendAsync("abcde123456âˆšÃ†Â±Â¶âˆ†") end end end else -- Send the message using either legacy or new chat service if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer(msg, "All") else chat:SendAsync(msg) end textBox.Text = "" end end -- Function to handle key presses local function disableChatOpening(input, gameProcessed) if input.KeyCode == Enum.KeyCode.Slash and not gameProcessed then G2L["2"].Visible = not G2L["2"].Visible -- Toggle GUI visibility print("GUI visibility toggled") -- Set focus to the TextBox when the GUI is shown if G2L["2"].Visible then textBox:CaptureFocus() -- Focus on the TextBox task.wait(0.1) textBox.Text = "" -- Clear any unwanted text like "/" end return true -- Indicate the input was handled end end -- Connect the key press handler UserInputService.InputBegan:Connect(disableChatOpening) -- Handle Enter key press when in the TextBox textBox.FocusLost:Connect(function(enterPressed) if enterPressed then -- Hide the GUI when Enter is pressed G2L["2"].Visible = false -- Process and send the message local inputText = textBox.Text local convertedText = filter(inputText) sendChat(convertedText) end end) -- GUI Dragging functionality (assuming itâ€™s a frame that can be dragged) local function C_3() local script = G2L["3"] local gui = script.Parent local dragging, dragInput, dragStart, startPos local function update(input) local delta = input.Position - dragStart gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end gui.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = true dragStart = input.Position startPos = gui.Position input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end) end end) gui.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then dragInput = input end end) UserInputService.InputChanged:Connect(function(input) if input == dragInput and dragging then update(input) end end) end -- Create a button that will simulate pressing `/` local mobileButton = Instance.new("TextButton") mobileButton.Size = UDim2.new(0, 100, 0, 50) mobileButton.Position = UDim2.new(0.1, 0, 0.1, 0) -- You can change this to position the button as desired mobileButton.Text = "Open Text Box" mobileButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255) mobileButton.TextColor3 = Color3.fromRGB(255, 255, 255) mobileButton.Parent = G2L["1"] -- Function to handle button clicks local function onButtonClick() if UserInputService.TouchEnabled then G2L["2"].Visible = not G2L["2"].Visible -- Toggle GUI visibility -- Set focus to the TextBox when the GUI is shown if G2L["2"].Visible then textBox:CaptureFocus() -- Focus on the TextBox task.wait(0.1) textBox.Text = "" -- Clear any unwanted text like "/" end end end -- Connect the button click event mobileButton.MouseButton1Click:Connect(onButtonClick) --[[ NiggerAutoBypasser v1.0.0 Beta! by _9xr and jesus Credits: - Jesus - bypassing shit - _9xr - making the ui work and shit ==================================== Controls: - Press / to make the textbox show up where you can type and close. - If ur mobile, Press the mobile button on ur screen to make the textbox show up and close. ]] Settings = { SecureMode = false, -- Set this to true if your game is detecting the ui. AutoSendFixMsg = true, -- Auto sends a bypass fix message if your bypass sentence is getting tagged. FixMsgSettings = { Method = 1 -- Which method to use for the fix msg, you can pick out of 4 methods, } } -- // ACTUAL CODE STARTS DOWN HERE \\ -- -- Services local UserInputService = game:GetService("UserInputService") local TextChatService = game:GetService("TextChatService") local ReplicatedStorage = game:GetService("ReplicatedStorage") local StarterGui = game:GetService("StarterGui") local coreGui = game:GetService("CoreGui") local RunService = game:GetService("RunService") local Players = game:GetService("Players") local LocalPlayer = Players.LocalPlayer local playerGui = LocalPlayer:WaitForChild("PlayerGui") local chat = TextChatService.ChatInputBarConfiguration.TargetTextChannel local isStudio = RunService:IsStudio() local isMobile = UserInputService.TouchEnabled -- Determine the parent for the GUI based on settings local GuiParent = isStudio and CoreGui or LocalPlayer:WaitForChild("PlayerGui") -- acl loadstring(game:HttpGet("https://pastebin.com/raw/0dxSGSNN", true))() local G2L = {} -- GUI Creation Code G2L["1"] = Instance.new("ScreenGui", GuiParent) if Settings.SecureMode == true then G2L["1"].Parent = isStudio and coreGui G2L["1"].Name = tostring(math.random(99999,111111)); end G2L["2"] = Instance.new("Frame", G2L["1"]) G2L["2"].BorderSizePixel = 0 G2L["2"].BackgroundColor3 = Color3.fromRGB(0, 0, 0) G2L["2"].Size = UDim2.new(0, 316, 0, 128) G2L["2"].Position = UDim2.new(0.5, -150, 0.5, -50) G2L["2"].BorderColor3 = Color3.fromRGB(0, 0, 0) G2L["2"].Visible = false -- Start hidden -- Adding a TextBox to the frame local textBox = Instance.new("TextBox", G2L["2"]) textBox.Size = UDim2.new(0.8, 0, 0.3, 0) textBox.Position = UDim2.new(0.1, 0, 0.35, 0) textBox.PlaceholderText = "Type here..." textBox.Text = "" textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) textBox.TextColor3 = Color3.fromRGB(0, 0, 0) textBox.ClearTextOnFocus = false -- List of letters to replace with their bypass versions local letters = { ["A"] = "Ð�ï¿³ï¿´ï¿´", ["a"] = "Ð°ï¿´ï¿´ï¿³", ["B"] = "Ð’ï¿´ï¿´ï¿³", ["b"] = "bï¿´ï¿´ï¿³", ["C"] = "Ð¡ï¿³ï¿´ï¿´", ["c"] = "Ñ�ï¿³ï¿´ï¿´", ["D"] = "Dï¿´ï¿´", ["d"] = "dï¿´ï¿´", ["E"] = "Ð•ï¿´ï¿´ï¿³", ["e"] = "Ðµï¿´ï¿´ï¿³", ["F"] = "Fï¿´ï¿´", ["f"] = "fï¿´ï¿´", ["G"] = "Gï¿³ï¿´ï¿´", ["g"] = "gï¿³ï¿´ï¿´", ["H"] = "Ð�ï¿³ï¿´ï¿´", ["h"] = "Ò»ï¿´ï¿´ï¿³", ["I"] = "Ð†ï¿´ï¿´ï¿³", ["i"] = "Ñ–ï¿´ï¿´ï¿³", ["J"] = "Ðˆï¿´ï¿´", ["j"] = "Ñ˜ï¿´ï¿´", ["K"] = "Îšï¿³ï¿´ï¿´", ["k"] = "kï¿´ï¿´ï¿³ï¿´ï¿´", ["L"] = "Lï¿´ï¿´", ["l"] = "Ó�ï¿´ï¿´", ["M"] = "Îœï¿´ï¿´", ["m"] = "mï¿´ï¿´", ["N"] = "Î�ï¿´ï¿´", ["n"] = "nï¿´ï¿´", ["O"] = "Ðžï¿³ï¿´ï¿´", ["o"] = "Ð¾ï¿³ï¿´ï¿´", ["P"] = "Ð ï¿´ï¿´ï¿³", ["p"] = "Ñ€ï¿´ï¿´ï¿³", ["Q"] = "Qï¿´ï¿´", ["q"] = "qï¿´ï¿´", ["R"] = "Rï¿´ï¿´ï¿³ï¿³ï¿³", ["r"] = "rï¿³ï¿³ï¿³ï¿´ï¿´", ["S"] = "Ð…ï¿³ï¿³ï¿³ï¿´ï¿´", ["s"] = "Ñ•ï¿´ï¿´ï¿³ï¿³ï¿³", ["T"] = "Ð¢ï¿´ï¿´", ["t"] = "tï¿´ï¿´", ["U"] = "Uï¿³ï¿´ï¿´", ["u"] = "uï¿´ï¿´ï¿³", ["V"] = "Vï¿´ï¿´", ["v"] = "vï¿´ï¿´", ["W"] = "Wï¿´ï¿´", ["w"] = "wï¿´ï¿´", ["X"] = "Ð¥ï¿´ï¿´", ["x"] = "Ñ…ï¿´ï¿´", ["Y"] = "Ò®ï¿´ï¿´ï¿³ï¿³", ["y"] = "Ñƒï¿³ï¿³ï¿´ï¿´", ["Z"] = "Î–ï¿´ï¿´", ["z"] = "zï¿´ï¿´", [" "] = "", ["gas"] = "gï¿³ï¿³Ð°Ñ•", ["the"] = "tï¿³Ò»Ðµ", ["shut"] = "Ñ•Ò»ï¿³ï¿³ut", } -- Function to replace letters in the message local function replace(str, find_str, replace_str) local escaped_find_str = find_str:gsub("[%-%^%$%(%)%%%.%[%]%*%+%-%?]", "%%%0") return str:gsub(escaped_find_str, replace_str) end -- Function to filter the message by replacing characters local function filter(message) for search, replacement in pairs(letters) do message = replace(message, search, replacement) end return message end -- Function to send a chat message local function sendChat(msg) local filteredMessage = game:GetService("Chat"):FilterStringForBroadcast(msg, LocalPlayer) local tagged = filteredMessage ~= msg if tagged then -- Show notification if the message was tagged StarterGui:SetCore("SendNotification", { Title = "chat tagged", Text = "the shit you said got tagged", Duration = 5 }) textBox.Text = "" if Settings.AutoSendFixMsg == true then if Settings.FixMsgSettings.Method == 1 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("ababab-0", "All") else chat:SendAsync("ababab-0") end elseif Settings.FixMsgSettings.Method == 2 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("abcdefg()", "All") else chat:SendAsync("abcdefg()") end elseif Settings.FixMsgSettings.Method == 3 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("/E FIX", "All") else chat:SendAsync("/E FIX") end elseif Settings.FixMsgSettings.Method == 4 then if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer("abcde123456âˆšÃ†Â±Â¶âˆ†", "All") else chat:SendAsync("abcde123456âˆšÃ†Â±Â¶âˆ†") end end end else -- Send the message using either legacy or new chat service if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents").SayMessageRequest:FireServer(msg, "All") else chat:SendAsync(msg) end textBox.Text = "" end end -- Function to handle key presses local function disableChatOpening(input, gameProcessed) if input.KeyCode == Enum.KeyCode.Slash and not gameProcessed then G2L["2"].Visible = not G2L["2"].Visible -- Toggle GUI visibility print("GUI visibility toggled") -- Set focus to the TextBox when the GUI is shown if G2L["2"].Visible then textBox:CaptureFocus() -- Focus on the TextBox task.wait(0.1) textBox.Text = "" -- Clear any unwanted text like "/" end return true -- Indicate the input was handled end end -- Connect the key press handler UserInputService.InputBegan:Connect(disableChatOpening) -- Handle Enter key press when in the TextBox textBox.FocusLost:Connect(function(enterPressed) if enterPressed then -- Hide the GUI when Enter is pressed G2L["2"].Visible = false -- Process and send the message local inputText = textBox.Text local convertedText = filter(inputText) sendChat(convertedText) end end) -- GUI Dragging functionality (assuming itâ€™s a frame that can be dragged) local function C_3() local script = G2L["3"] local gui = script.Parent local dragging, dragInput, dragStart, startPos local function update(input) local delta = input.Position - dragStart gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end gui.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = true dragStart = input.Position startPos = gui.Position input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end) end end) gui.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then dragInput = input end end) UserInputService.InputChanged:Connect(function(input) if input == dragInput and dragging then update(input) end end) end -- Create a button that will simulate pressing `/` local mobileButton = Instance.new("TextButton") mobileButton.Size = UDim2.new(0, 100, 0, 50) mobileButton.Position = UDim2.new(0.1, 0, 0.1, 0) -- You can change this to position the button as desired mobileButton.Text = "Open Text Box" mobileButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255) mobileButton.TextColor3 = Color3.fromRGB(255, 255, 255) mobileButton.Parent = G2L["1"] -- Function to handle button clicks local function onButtonClick() if UserInputService.TouchEnabled then G2L["2"].Visible = not G2L["2"].Visible -- Toggle GUI visibility -- Set focus to the TextBox when the GUI is shown if G2L["2"].Visible then textBox:CaptureFocus() -- Focus on the TextBox task.wait(0.1) textBox.Text = "" -- Clear any unwanted text like "/" end end end--[[ NiggerAutoBypasser v1.0.0 Beta! by _9xr and jesus Credits: - Jesus - bypassing shit - _9xr - making the ui work and shit ==================================== Controls: - Press / to make the textbox show up where you can type and close. - If ur mobile, Press the mobile button on ur screen to make the textbox sh
